"""empty message

Revision ID: 1d4e877b8561
Revises: 394f6e9df9ed
Create Date: 2015-03-06 13:14:40.081639

"""

# revision identifiers, used by Alembic.
from sqlalchemy.dialects.sqlite.pysqlite import SQLiteDialect_pysqlite

revision = '1d4e877b8561'
down_revision = '394f6e9df9ed'

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###

    bind = op.get_bind()
    if type(bind.dialect) == SQLiteDialect_pysqlite:
        try:
            op.create_foreign_key(None, 'acceptance', 'way_bill', ['waybill_id'], ['id'])
            op.create_foreign_key(None, 'acceptance', 'point_sale', ['pointsale_id'], ['id'])
            op.create_foreign_key(None, 'invoice_item', 'good', ['good_id'], ['id'])
            op.create_foreign_key(None, 'mails', 'invoice', ['invoice_id'], ['id'])
            op.create_foreign_key(None, 'retail_invoice_item', 'good', ['good_id'], ['id'])
            op.create_foreign_key(None, 'way_bill', 'point_sale', ['pointsale_from_id'], ['id'])
        except Exception as exc:
            pass
    else:
        op.create_foreign_key(None, 'acceptance', 'way_bill', ['waybill_id'], ['id'])
        op.create_foreign_key(None, 'acceptance', 'point_sale', ['pointsale_id'], ['id'])
        op.create_foreign_key(None, 'invoice_item', 'good', ['good_id'], ['id'])
        op.create_foreign_key(None, 'mails', 'invoice', ['invoice_id'], ['id'])
        op.create_foreign_key(None, 'retail_invoice_item', 'good', ['good_id'], ['id'])
        op.create_foreign_key(None, 'way_bill', 'point_sale', ['pointsale_from_id'], ['id'])


    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    if type(bind.dialect) == SQLiteDialect_pysqlite:
        try:
            op.drop_constraint(None, 'way_bill', type_='foreignkey')
            op.drop_constraint(None, 'retail_invoice_item', type_='foreignkey')
            op.drop_constraint(None, 'mails', type_='foreignkey')
            op.drop_constraint(None, 'invoice_item', type_='foreignkey')
            op.drop_constraint(None, 'acceptance', type_='foreignkey')
            op.drop_constraint(None, 'acceptance', type_='foreignkey')
        except Exception as exc:
            pass
    else:
        op.drop_constraint(None, 'way_bill', type_='foreignkey')
        op.drop_constraint(None, 'retail_invoice_item', type_='foreignkey')
        op.drop_constraint(None, 'mails', type_='foreignkey')
        op.drop_constraint(None, 'invoice_item', type_='foreignkey')
        op.drop_constraint(None, 'acceptance', type_='foreignkey')
        op.drop_constraint(None, 'acceptance', type_='foreignkey')
    ### end Alembic commands ###
