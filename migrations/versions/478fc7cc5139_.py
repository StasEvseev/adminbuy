"""empty message

Revision ID: 478fc7cc5139
Revises: 52dd9e57867
Create Date: 2015-04-07 17:42:37.517247

"""

# revision identifiers, used by Alembic.
from sqlalchemy.dialects.sqlite.pysqlite import SQLiteDialect_pysqlite

revision = '478fc7cc5139'
down_revision = '52dd9e57867'

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('return',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_start', sa.Date(), nullable=True),
    sa.Column('date_end', sa.Date(), nullable=True),
    sa.Column('provider_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['provider.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('return_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=250), nullable=True),
    sa.Column('number_local', sa.String(length=250), nullable=True),
    sa.Column('number_global', sa.String(length=250), nullable=True),
    sa.Column('name', sa.String(length=250), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('date_to', sa.Date(), nullable=True),
    sa.Column('price_without_NDS', sa.DECIMAL(), nullable=True),
    sa.Column('price_with_NDS', sa.DECIMAL(), nullable=True),
    sa.Column('remission', sa.DECIMAL(), nullable=True),
    sa.Column('count_delivery', sa.Integer(), nullable=True),
    sa.Column('count_rem', sa.Integer(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('good_id', sa.Integer(), nullable=True),
    sa.Column('return_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['good_id'], ['good.id'], ),
    sa.ForeignKeyConstraint(['return_id'], ['return.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column(u'order_item', sa.Column('good_id', sa.Integer(), nullable=True))
    bind = op.get_bind()
    if type(bind.dialect) == SQLiteDialect_pysqlite:
        try:
            op.create_foreign_key(None, 'order_item', 'good', ['good_id'], ['id'])
        except Exception as exc:
            pass
    else:
        op.create_foreign_key(None, 'order_item', 'good', ['good_id'], ['id'])

    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'order_item', type_='foreignkey')
    op.drop_column(u'order_item', 'good_id')
    op.drop_table('return_item')
    op.drop_table('return')
    ### end Alembic commands ###
